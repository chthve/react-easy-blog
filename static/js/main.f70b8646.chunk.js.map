{"version":3,"sources":["../../src/components/Banner/styles.tsx","../../src/components/Banner/image.tsx","../../src/components/Banner/button.tsx","../../src/components/Banner/title.tsx","../../src/components/Banner/description.tsx","../../src/components/Banner/text.tsx","../../src/components/Banner/banner.tsx","../../src/components/Card/styles.tsx","../../src/components/Card/socialMedia.tsx","../../src/components/Card/image.tsx","../../src/components/Card/category.tsx","../../src/components/Card/title.tsx","../../src/components/Card/description.tsx","../../src/components/Card/author.tsx","../../src/components/Card/date.tsx","../../src/components/Card/text.tsx","../../src/components/Card/card.tsx","../../src/components/List/styles.tsx","../../src/components/List/image.tsx","../../src/components/List/description.tsx","../../src/components/List/title.tsx","../../src/components/List/author.tsx","../../src/components/List/date.tsx","../../src/components/List/text.tsx","../../src/components/List/category.tsx","../../src/components/List/list.tsx","components/intro.tsx","components/article.tsx","components/fontSelector.tsx","components/color.tsx","components/size.tsx","components/style.tsx","components/container.tsx","components/codeSnippet.tsx","App.tsx","index.tsx"],"names":["BannerContainer","styled","props","BannerImage","BannerTextContainer","BannerTitle","BannerDescription","BannerButton","Route","Image","image","src","Button","route","href","React","Title","content","Description","Text","article","title","description","defaultTheme","width","height","style","fontColor","hoverButton","largeFont","mediumFont","fontFamily","primary","Banner","Object","useState","setIsShown","theme","hover","onMouseEnter","toggleShow","onMouseLeave","isShown","CardContainer","ImageContainer","Img","SocialMediaContainer","Link","InfoContainer","CategoryText","TitleText","DescriptionText","InfoText","SocialMedia","socialMedia","Category","Author","Date","format","DatePost","moment","Div","category","author","date","secondary","smallFont","backgroundColor","border","socialMediaBackground","Card","ListContainer","Separation","TextContainer","CategoryContainer","imagePosition","List","showCategory","Intro","className","Article","setArticle","handleInputChange","e","identifier","newArticle","target","value","onChange","placeholder","fonts","FontSelector","setTheme","handleChange","name","map","font","type","min","max","slice","Color","Size","console","log","ComponentStyle","component","setComponent","handleClick","onClick","OptionsContainer","setSocialMedia","setShowCategory","setHover","handleSocialMedia","state","handleSocialMediaBackground","handleImageSide","position","handleShowCategory","handleBannerStyle","handleHover","CodeSnippet","useEffect","Prism","highlightAll","string","keys","reduce","a","b","trim","propArticle","propHover","propSocialMedia","propShowCategory","propRoute","bannerCode","cardCode","listCode","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f70b8646.chunk.js","sourcesContent":["import styled from 'styled-components'\n\n// Main container\n\nexport const BannerContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: relative;\n  height: ${(props: any) => props.theme.height};\n  width: ${(props: any) => props.theme.width};\n  margin-top: 2rem;\n  min-width: 400px;\n  min-height: 350px;\n  max-width: 1000px;\n  max-height: 1000px;\n`\n\n// Image\n\nexport const BannerImage = styled.img`\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n`\n\n// Text Container\n\nexport const BannerTextContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  position: ${(props: any) =>\n    props.theme.style === 2 ? 'absolute' : 'relative'};\n  bottom: ${(props: any) => (props.theme.style === 2 ? '0' : '')};\n  width: ${(props: any) => (props.theme.style === 2 ? '100%' : '80%')};\n  height: ${(props: any) => (props.theme.style === 2 ? '40%' : '70%')};\n  font-family: ${(props: any) => props.theme.fontFamily};\n  border: none;\n  border-radius: none;\n  background-color: rgb(255, 255, 255, 0.2);\n  box-shadow: ${(props: any) =>\n    props.theme.style === 2 ? '' : '0 25px 60px rgba(0,0,0,.8)'};\n`\n\n// Title\n\nexport const BannerTitle = styled.p`\n  font-size: ${(props: any) => props.theme.largeFont};\n  font-weight: bold;\n  width: 85%;\n  margin: 1rem;\n  text-align: center;\n  color: ${(props: any) => props.theme.fontColor};\n`\n\n// Description\n\nexport const BannerDescription = styled.p`\n  font-size: ${(props: any) => props.theme.mediumFont};\n  font-weight: regular;\n  margin: 1rem;\n  width: 85%;\n  text-align: center;\n  color: ${(props: any) => props.theme.fontColor};\n`\n\n// Button\n\nexport const BannerButton = styled.button`\n  background: transparent;\n  color: ${(props: any) => props.theme.fontColor};\n  font-weight: bold;\n  font-size: ${(props: any) => props.theme.mediumFont};\n  padding: 1rem 2rem;\n  margin: 1rem;\n  border: solid 1px ${(props: any) => props.theme.fontColor};\n  outline: none;\n  transition: 0.2s;\n  &:hover {\n    cursor: pointer;\n    background-color: ${(props: any) =>\n      props.theme.hoverButton ? props.theme.fontColor : 'transparent'};\n    color: ${(props: any) =>\n      props.theme.hoverButton ? props.theme.primary : props.theme.fontColor};\n`\n\nexport const Route = styled.a`\n  cursor: pointer;\n`\n","import * as React from 'react'\nimport { BannerImage } from './styles'\n\nexport interface ImageProps {\n  image?: string\n}\n\nexport const Image: React.FC<ImageProps> = ({ image }: ImageProps) => {\n  return <BannerImage src={image} />\n}\n","import * as React from 'react'\nimport { BannerButton, Route } from './styles'\n\ninterface ButtonProps {\n  route?: string\n}\n\nexport const Button: React.FC<ButtonProps> = ({ route }: ButtonProps) => {\n  return (\n    <Route href={route}>\n      <BannerButton>Read More</BannerButton>\n    </Route>\n  )\n}\n","import * as React from 'react'\nimport { BannerTitle } from './styles'\n\nexport interface TitleProps {\n  content?: string\n}\n\nexport const Title: React.FC<TitleProps> = ({ content }: TitleProps) => {\n  return <BannerTitle>{content}</BannerTitle>\n}\n","import * as React from 'react'\nimport { BannerDescription } from './styles'\n\nexport interface DescriptionProps {\n  content?: string\n}\n\nexport const Description: React.FC<DescriptionProps> = ({\n  content\n}: DescriptionProps) => {\n  return <BannerDescription>{content}</BannerDescription>\n}\n","import React from 'react'\nimport { Button } from './button'\nimport { Title } from './title'\nimport { BannerTextContainer } from './styles'\nimport { Description } from './description'\n\nexport interface TextProps {\n  article?: {\n    image?: string\n    title?: string\n    description?: string\n  }\n  route?: string\n  style?: number\n}\n\nexport const Text: React.FC<TextProps> = ({ article, route }: TextProps) => {\n  return (\n    <BannerTextContainer>\n      <Title content={article && article.title} />\n      <Description content={article && article.description} />\n      <Button route={route} />\n    </BannerTextContainer>\n  )\n}\n","import React, { useState } from 'react'\nimport { ThemeProvider } from 'styled-components'\n\nimport { BannerContainer } from './styles'\nimport { Image } from './image'\nimport { Text } from './text'\n\nexport interface BannerProps {\n  article?: {\n    author?: string\n    category?: string\n    title?: string\n    description?: string\n    date?: number\n    image: string\n  }\n  theme: {\n    width?: string\n    height?: string\n  }\n  hover?: boolean\n  route?: string\n}\n\nconst defaultTheme = {\n  width: '550px',\n  height: '400px',\n  style: 1,\n  fontColor: 'black',\n  hoverButton: true,\n  largeFont: '18px',\n  mediumFont: '14px',\n  fontFamily: 'New Times Roman',\n  primary: 'white'\n}\n\nexport default function Banner({ article, theme, hover, route }: BannerProps) {\n  Object.assign(defaultTheme, theme)\n  const [isShown, setIsShown] = useState(false)\n  function toggleShow() {\n    setIsShown(!isShown)\n  }\n  return (\n    <ThemeProvider theme={defaultTheme}>\n      {hover && (\n        <BannerContainer\n          onMouseEnter={() => toggleShow()}\n          onMouseLeave={() => toggleShow()}\n        >\n          <Image image={article && article.image} />\n          {isShown && <Text article={article} route={route} />}\n        </BannerContainer>\n      )}\n      {!hover && (\n        <BannerContainer>\n          <Image image={article && article.image} />\n          <Text article={article && article} route={route} />\n        </BannerContainer>\n      )}\n    </ThemeProvider>\n  )\n}\n","import styled from 'styled-components'\n\n// Card Styling\n\nexport const CardContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  background-color: ${(props: any) => props.theme.backgroundColor};\n  height: ${(props: any) => props.theme.height};\n  width: ${(props: any) => props.theme.width};\n  border: ${(props: any) =>\n    props.theme.border ? `solid 1px ${props.theme.primary}` : 'none'};\n  font-family: ${(props: any) => props.theme.fontFamily};\n  margin-top: 2rem;\n  min-height: 350px;\n  min-width: 350px;\n  max-height: 550px;\n  max-width: 550px;\n`\n\n// Image Styling\n\nexport const ImageContainer = styled.div`\n  position: relative;\n  width: ${(props: any) => props.theme.width};\n  min-width: 350px;\n  max-width: 550px;\n  height: 100%;\n`\n\nexport const Img = styled.img`\n  position: absolute;\n  height: 100%;\n  width: 100%;\n  object-fit: cover;\n`\n\n// Social Media Styling\n\nexport const SocialMediaContainer = styled.div`\n  position: absolute;\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  width: 45%;\n  height: 9%;\n  background-color: ${(props: any) =>\n    props.theme.socialMediaBackground ? props.theme.primary : 'none'};\n  border-top-left-radius: 2px;\n  border-top-right-radius: 2px;\n  bottom: 0;\n  right: 27.5%;\n`\n\nexport const Button = styled.button`\n  height: ${(props: any) =>\n    props.theme.socialMediaBackground ? '65%' : '80%'};\n  width: auto;\n  font-size: 0.75rem;\n  padding: 0 0.4rem;\n  margin-bottom: ${(props: any) =>\n    props.theme.socialMediaBackground ? 'none' : '0.5rem'};\n  background-color: ${(props: any) => props.theme.secondary};\n  color: ${(props: any) => props.theme.primary};\n  border: none;\n  outline: none;\n\n  &:hover {\n    cursor: pointer;\n  }\n`\n\nexport const Link = styled.a`\n  color: inherit;\n  text-decoration: none;\n`\n\n// Text Container Style\n\nexport const InfoContainer = styled.div`\n  display: flex;\n  justify-content: space-around;\n  width: 100%;\n  height: 100%;\n  align-self: flex-end;\n`\n\n// Category Style\n\nexport const CategoryText = styled.p`\n  font-size: ${(props: any) => props.theme.smallFont};\n  color: ${(props: any) => props.theme.primary};\n  margin: 1rem;\n  text-align: center;\n`\n\n// Title Style\n\nexport const TitleText = styled.p`\n  font-size: ${(props: any) => props.theme.largeFont};\n  font-weight: bold;\n  margin: 1rem;\n  color: ${(props: any) => props.theme.fontColor};\n  text-align: left;\n  width: 95%;\n`\n\n// Description Style\n\nexport const DescriptionText = styled.p`\n  font-size: ${(props: any) => props.theme.mediumFont};\n  color: ${(props: any) => props.theme.fontColor};\n  text-align: left;\n  width: 95%;\n`\n\n// Info Text\n\nexport const InfoText = styled.p`\n  font-size: ${(props: any) => props.theme.smallFont};\n  color: ${(props: any) => props.theme.primary};\n  margin: 2rem;\n`\n\nexport const Route = styled.a`\n  cursor: pointer;\n`\n","import * as React from 'react'\n\nimport { SocialMediaContainer, Button, Link } from './styles'\n\nexport const SocialMedia: React.FC = () => {\n  return (\n    <SocialMediaContainer>\n      <Button>\n        <Link>Like</Link>\n      </Button>\n      <Button>\n        <Link>Share</Link>\n      </Button>\n      <Button>\n        <Link>Tweet</Link>\n      </Button>\n    </SocialMediaContainer>\n  )\n}\n","import * as React from 'react'\nimport { SocialMedia } from './socialMedia'\nimport { ImageContainer, Img, Route } from './styles'\n\nexport interface ImageProps {\n  image?: string\n  socialMedia?: boolean\n  route?: string\n}\n\nexport const Image: React.FC<ImageProps> = ({\n  image,\n  socialMedia,\n  route\n}: ImageProps) => {\n  return (\n    <ImageContainer>\n      <Route href={route}>\n        <Img src={image} />\n        {socialMedia && <SocialMedia />}\n      </Route>\n    </ImageContainer>\n  )\n}\n","import * as React from 'react'\nimport { CategoryText } from './styles'\n\nexport interface CategoryProps {\n  content?: string\n}\n\nexport const Category: React.FC<CategoryProps> = ({\n  content\n}: CategoryProps) => {\n  return <CategoryText>{content}</CategoryText>\n}\n","import * as React from 'react'\nimport { TitleText } from './styles'\n\nexport interface TitleProps {\n  content?: string\n}\n\nexport const Title: React.FC<TitleProps> = ({ content }: TitleProps) => {\n  return <TitleText>{content}</TitleText>\n}\n","import * as React from 'react'\nimport { DescriptionText } from './styles'\n\nexport interface DescriptionProps {\n  content?: string\n}\n\nexport const Description: React.FC<DescriptionProps> = ({\n  content\n}: DescriptionProps) => {\n  return <DescriptionText>{content}</DescriptionText>\n}\n","import * as React from 'react'\nimport { InfoText } from './styles'\n\nexport interface AuthorProps {\n  content?: string\n}\n\nexport const Author: React.FC<AuthorProps> = ({ content }: AuthorProps) => {\n  return <InfoText>{content}</InfoText>\n}\n","import * as React from 'react'\nimport moment from 'moment'\n\nimport { InfoText } from './styles'\n\nexport interface DateProps {\n  format?: string\n  content?: number\n}\n\nexport const Date: React.FC<DateProps> = ({ content, format }: DateProps) => {\n  format = format || 'DD-MMM-YY'\n  const DatePost = moment(content).format(format)\n\n  return <InfoText>{DatePost}</InfoText>\n}\n","import * as React from 'react'\n\nimport { Category } from './category'\nimport { Title } from './title'\nimport { Description } from './description'\nimport { Author } from './author'\nimport { Date } from './date'\n\nimport styled from 'styled-components'\n\nimport { InfoContainer } from './styles'\n\nexport interface TextProps {\n  article: {\n    title?: string\n    description?: string\n    category?: string\n    date?: number\n    author?: string\n  }\n}\n\nconst Div = styled.div`\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  justify-content: center;\n  text-align: center;\n`\n\nexport const Text: React.FC<TextProps> = ({ article }: TextProps) => {\n  return (\n    <Div>\n      <Category content={article.category} />\n      <Title content={article.title} />\n      <Description content={article.description} />\n      <InfoContainer>\n        <Author content={article.author} />\n        <Date content={article.date} />\n      </InfoContainer>\n    </Div>\n  )\n}\n","import React from 'react'\nimport { ThemeProvider } from 'styled-components'\nimport { CardContainer } from './styles'\n\nimport { Image } from './image'\nimport { Text } from './text'\n\ninterface CardProps {\n  article: {\n    title?: string\n    category?: string\n    image: string\n    author: string\n    date?: number\n  }\n  theme: {\n    primary?: string\n    secondary?: string\n    smallFont?: string\n    mediumFont?: string\n    largeFont?: string\n    backgroundColor?: string\n    socialMediaBackground?: boolean\n    border?: boolean\n    size?: {\n      height: string\n      width: string\n    }\n  }\n  dateFormat?: string\n  socialMedia?: boolean\n  route?: string\n}\n\nconst defaultTheme = {\n  primary: 'rgb(230, 96, 96)',\n  secondary: 'white',\n  smallFont: '10px',\n  mediumFont: '12px',\n  largeFont: '14px',\n  backgroundColor: 'white',\n  fontFamily: 'Times New Roman',\n  border: false,\n  socialMediaBackground: false,\n  height: '300px',\n  width: '260px'\n}\n\nexport default function Card({\n  article,\n  theme,\n  socialMedia,\n  route\n}: CardProps) {\n  Object.assign(defaultTheme, theme)\n  return (\n    <ThemeProvider theme={defaultTheme}>\n      <CardContainer>\n        <Image image={article.image} socialMedia={socialMedia} route={route} />\n        <Text article={article} />\n      </CardContainer>\n    </ThemeProvider>\n  )\n}\n","import styled from 'styled-components'\n\n// Main container\n\nexport const ListContainer = styled.div`\n  display: flex;\n  position: relative;\n  background-color: white;\n  flex-direction: ${(props: any) =>\n    props.theme.imagePosition === 'right' ? 'row-reverse' : 'row'};\n  height: ${(props: any) => props.theme.height};\n  width: ${(props: any) => props.theme.width};\n  margin: 2rem;\n  padding: 1.5rem;\n  min-height: 170px;\n  min-width: 550px;\n  max-height: 500px;\n  max-width: 800px;\n`\n\nexport const Separation = styled.div`\n  position: absolute;\n  bottom: -15px;\n  border-radius: 2px;\n  left: 5%;\n  height: 1px;\n  width: 90%;\n  background-color: ${(props: any) => props.theme.secondary};\n`\n\n// Image\n\nexport const ImageContainer = styled.div`\n  height: 100%;\n  width: 25%;\n`\n\nexport const Img = styled.img`\n  height: 100%;\n  width: 100%;\n  object-fit: cover;\n`\n\n// Text Container\n\nexport const TextContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 75%;\n  font-family: ${(props: any) => props.theme.fontFamily};\n  color: ${(props: any) => props.theme.fontColor};\n`\n\n// Title\n\nexport const TitleText = styled.p`\n  width: 95%;\n  font-size: ${(props: any) => props.theme.largeFont};\n  margin-top: 0.2rem;\n  font-weight: bold;\n`\n\n// Description\n\nexport const DescriptionText = styled.p`\n  margin-top: 1rem;\n  width: 95%;\n  font-size: ${(props: any) => props.theme.mediumFont};\n`\n\n// Info Container\n\nexport const InfoContainer = styled.div`\n  display: flex;\n  justify-content: space-around;\n  width: 100%;\n  height: 100%;\n  align-self: flex-end;\n`\n\n// Info Text\n\nexport const InfoText = styled.p`\n  font-size: ${(props: any) => props.theme.smallFont};\n  color: ${(props: any) => props.theme.primary};\n  margin: 2rem;\n`\n\n// Category\n\nexport const CategoryContainer = styled.div`\n  position: absolute;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  top: -10px;\n  right: ${(props: any) =>\n    props.theme.imagePosition === 'right' ? '' : '-10px'};\n  left: ${(props: any) =>\n    props.theme.imagePosition === 'left' ? '' : '-10px'};\n  width: 78px;\n  height: 28px;\n  background-color: ${(props: any) => props.theme.primary};\n`\n\nexport const CategoryText = styled.p`\n  font-size: ${(props: any) => props.theme.smallFont};\n  font-weight: bold;\n  text-transform: uppercase;\n  color: ${(props: any) => props.theme.secondary};\n  text-align: center;\n`\n\nexport const Route = styled.a`\n  cursor: pointer;\n`\n","import * as React from 'react'\nimport { ImageContainer, Img, Route } from './styles'\n\nexport interface ImageProps {\n  image?: string\n  route?: string\n}\n\nexport const Image: React.FC<ImageProps> = ({ image, route }: ImageProps) => {\n  return (\n    <ImageContainer>\n      <Route href={route}>\n        <Img src={image} />\n      </Route>\n    </ImageContainer>\n  )\n}\n","import * as React from 'react'\nimport { DescriptionText } from './styles'\n\nexport interface DescriptionProps {\n  content?: string\n}\n\nexport const Description: React.FC<DescriptionProps> = ({\n  content\n}: DescriptionProps) => {\n  return <DescriptionText>{content}</DescriptionText>\n}\n","import * as React from 'react'\nimport { TitleText } from './styles'\n\nexport interface TitleProps {\n  content?: string\n}\n\nexport const Title: React.FC<TitleProps> = ({ content }: TitleProps) => {\n  return <TitleText>{content}</TitleText>\n}\n","import * as React from 'react'\nimport { InfoText } from './styles'\n\nexport interface AuthorProps {\n  content?: string\n}\n\nexport const Author: React.FC<AuthorProps> = ({ content }: AuthorProps) => {\n  return <InfoText>{content}</InfoText>\n}\n","import * as React from 'react'\nimport moment from 'moment'\n\nimport { InfoText } from './styles'\n\nexport interface DateProps {\n  format?: string\n  content?: number\n}\n\nexport const Date: React.FC<DateProps> = ({ content, format }: DateProps) => {\n  format = format || 'DD-MMM-YY'\n  const DatePost = moment(content).format(format)\n\n  return <InfoText>{DatePost}</InfoText>\n}\n","import * as React from 'react'\nimport { Description } from './description'\nimport { InfoContainer, TextContainer } from './styles'\nimport { Title } from './title'\nimport { Author } from './author'\nimport { Date } from './date'\n\nexport interface TextProps {\n  article?: {\n    title?: string\n    description?: string\n    author?: string\n    date?: number\n    category?: string\n  }\n}\n\nexport const Text: React.FC<TextProps> = ({ article }: TextProps) => {\n  return (\n    <TextContainer>\n      <Title content={article && article.title} />\n      <Description content={article && article.description} />\n      <InfoContainer>\n        <Author content={article && article.author} />\n        <Date content={article && article.date} />\n      </InfoContainer>\n    </TextContainer>\n  )\n}\n","import * as React from 'react'\nimport { CategoryText, CategoryContainer } from './styles'\n\nexport interface CategoryProps {\n  content?: string\n}\n\nexport const Category: React.FC<CategoryProps> = ({\n  content\n}: CategoryProps) => {\n  return (\n    <CategoryContainer>\n      <CategoryText>{content}</CategoryText>\n    </CategoryContainer>\n  )\n}\n","import * as React from 'react'\nimport { ThemeProvider } from 'styled-components'\nimport { Image } from './image'\nimport { ListContainer, Separation } from './styles'\nimport { Text } from './text'\nimport { Category } from './category'\n\nexport interface ListProps {\n  article?: {\n    image?: string\n    title?: string\n    description?: string\n    author?: string\n    date?: number\n    category?: string\n  }\n\n  theme: {\n    width?: string\n    height?: string\n    imagePostion?: string\n    primary?: string\n    secondary?: string\n    smallFont?: string\n    mediumFont?: string\n    largeFont?: string\n  }\n  showCategory?: boolean\n  route?: string\n}\n\nconst defaultTheme = {\n  width: '50px',\n  height: '170px',\n  smallFont: '10px',\n  mediumFont: '12px',\n  largeFont: '14px',\n  fontFamily: 'New Times Roman',\n  fontColor: 'black',\n  imagePosition: 'left',\n  primary: 'rgb(230, 96, 96)',\n  secondary: 'white'\n}\n\nexport default function List({\n  article,\n  theme,\n  showCategory,\n  route\n}: ListProps) {\n  Object.assign(defaultTheme, theme)\n  return (\n    <ThemeProvider theme={defaultTheme}>\n      <ListContainer>\n        {showCategory && <Category content={article && article.category} />}\n        <Image image={article && article.image} route={route} />\n        <Text article={article && article} />\n        <Separation />\n      </ListContainer>\n    </ThemeProvider>\n  )\n}\n","import * as React from 'react'\n\nexport const Intro: React.FC = () => {\n  return (\n    <div className='intro'>\n      <p className='intro_welcome'>Welcome everyone ! </p>\n      <p>\n        Follow the step of this customisation page to create your new blog post\n        in a fraction of time. Don't forget to:\n      </p>\n      <span className='intro_span'>npm i react-easy-blog-post</span>\n      <p>\n        and to have a look at the READ.me file on GitHub. Enjoy your writing ✍️\n      </p>\n    </div>\n  )\n}\n","import * as React from 'react'\n\nexport interface ArticleProps {\n  article: {\n    title: string\n    category: string\n    description: string\n    image: string\n    author: string\n    date: number\n  }\n  setArticle: React.Dispatch<\n    React.SetStateAction<{\n      title: string\n      category: string\n      description: string\n      image: string\n      author: string\n      date: number\n    }>\n  >\n}\n\nexport const Article: React.FC<ArticleProps> = ({\n  article,\n  setArticle\n}: ArticleProps) => {\n  const handleInputChange = (e: any, identifier: any) => {\n    const newArticle = { ...article }\n    newArticle[identifier] = e.target.value\n    setArticle(newArticle)\n  }\n\n  return (\n    <>\n      <h2>Compose your article</h2>\n      <div className='separation-line'>\n        <hr />\n      </div>\n      <div className='article-container'>\n        <label className='label'>Image</label>\n        <input\n          className='input'\n          onChange={(e) => handleInputChange(e, 'image')}\n          placeholder='Pass in a URL'\n        />\n        <label className='label'>Title</label>\n        <input\n          className='input'\n          onChange={(e) => handleInputChange(e, 'title')}\n        />\n        <label className='label'>Description</label>\n        <input\n          className='input'\n          onChange={(e) => handleInputChange(e, 'description')}\n        />\n        <label className='label'>Category</label>\n        <input\n          className='input'\n          onChange={(e) => handleInputChange(e, 'category')}\n        />\n        <label className='label'>Author</label>\n        <input\n          className='input'\n          onChange={(e) => handleInputChange(e, 'author')}\n        />\n        <label className='label'>Date</label>\n        <input\n          className='input'\n          onChange={(e) => handleInputChange(e, 'date')}\n          placeholder='Pass in a timestamp'\n        />\n      </div>\n    </>\n  )\n}\n","import React from 'react'\n\nconst fonts: string[] = [\n  'Chivo',\n  'Arial',\n  'Helvetica',\n  'Verdana',\n  'Trebuchet MS',\n  'Gill Sans',\n  'Noto Sans',\n  'Avantgarde',\n  'Optima',\n  'Arial Narrow',\n  'sans-serif',\n  'Times',\n  'Times New Roman',\n  'Didot',\n  'Georgia',\n  'Palatino',\n  'Bookman',\n  'New Century Schoolbook',\n  'American Typewriter',\n  'Serif',\n  'Andale Mono',\n  'Courier New',\n  'Courier',\n  'FreeMono',\n  'OCR A Std',\n  'DejaVu Sans Mono',\n  'Monospace',\n  'Comic Sans MS',\n  'Apple Chancery',\n  'Bradley Hand',\n  'Brush Script MT',\n  'Snell Roundhand',\n  'URW Chancery L',\n  'Cursive',\n  'Impact',\n  'Luminari',\n  'Chalkduster',\n  'Jazz LET',\n  'Blippo',\n  'Stencil Std',\n  'Marker Felt',\n  'Trattatello',\n  'Fantasy'\n]\n\ninterface FontSelectorProps {\n  theme: {\n    smallFont?: string\n    mediumFont?: string\n    largeFont?: string\n  }\n  setTheme: React.Dispatch<React.SetStateAction<{}>>\n}\n\nexport const FontSelector: React.FC<FontSelectorProps> = ({\n  setTheme,\n  theme\n}: FontSelectorProps) => {\n  function handleChange(e: any) {\n    let { name, value } = e.target\n    value =\n      name === 'smallFont' || name === 'mediumFont' || name === 'largeFont'\n        ? (value = `${value}px`)\n        : value\n    setTheme({ ...theme, [name]: value })\n  }\n\n  return (\n    <>\n      <h2>Compose your font</h2>\n      <div className='separation-line'>\n        <hr />\n      </div>\n      <div className='font-container'>\n        <div className='font-rule-container'>\n          <label className='label'>Font Family</label>\n          <select name='fontFamily' onChange={handleChange}>\n            {fonts.map((font) => (\n              <option value={font}>{font}</option>\n            ))}\n          </select>\n          <label className='label'>Small Font</label>\n          <input\n            className='input'\n            type='range'\n            min='5'\n            max='20'\n            value={theme.smallFont ? theme.smallFont.slice(0, -2) : '10'}\n            name='smallFont'\n            onChange={handleChange}\n          />\n          <label className='label'>Medium Font</label>\n          <input\n            className='input'\n            type='range'\n            min='10'\n            max='25'\n            value={theme.mediumFont ? theme.mediumFont.slice(0, -2) : '12'}\n            name='mediumFont'\n            onChange={handleChange}\n          />\n          <label className='label'>Large Font</label>\n          <input\n            className='input'\n            type='range'\n            min='15'\n            max='30'\n            value={theme.largeFont ? theme.largeFont.slice(0, -2) : '14'}\n            name='largeFont'\n            onChange={handleChange}\n          />\n          <label className='label'>Color</label>\n          <input\n            className='input-color'\n            type='color'\n            name='fontColor'\n            onChange={handleChange}\n          />\n        </div>\n      </div>\n    </>\n  )\n}\n","import * as React from 'react'\n\nexport interface ColorProps {\n  theme: {}\n  setTheme: React.Dispatch<React.SetStateAction<{}>>\n}\n\nexport const Color: React.FC<ColorProps> = ({\n  theme,\n  setTheme\n}: ColorProps) => {\n  function handleChange(e: any) {\n    const { name, value } = e.target\n    setTheme({ ...theme, [name]: value })\n  }\n  return (\n    <>\n      <h2>Pick your colors</h2>\n      <div className='separation-line'>\n        <hr />\n      </div>\n      <div className='color-container'>\n        <label className='label pick'>Primary Color</label>\n        <input\n          className='input-color pick'\n          type='color'\n          name='primary'\n          onChange={handleChange}\n        />\n        <label className='label pick'>Secondary Color</label>\n        <input\n          className='input-color pick'\n          type='color'\n          name='secondary'\n          onChange={handleChange}\n        />\n      </div>\n    </>\n  )\n}\n","import React from 'react'\n\nexport interface SizeProps {\n  theme: { height?: string; width?: string }\n  setTheme: React.Dispatch<React.SetStateAction<{}>>\n  style: string\n}\n\nexport const Size: React.FC<SizeProps> = ({\n  theme,\n  setTheme,\n  style\n}: SizeProps) => {\n  console.log(theme)\n  function handleChange(e: any) {\n    let { name, value } = e.target\n    value = `${value}px`\n    console.log(value)\n    setTheme({ ...theme, [name]: value })\n    console.log(theme)\n  }\n  return (\n    <>\n      <h2>What size will suit you ?</h2>\n      <div className='separation-line'>\n        <hr />\n      </div>\n      <div className='size-container'>\n        {style === 'banner' && (\n          <>\n            <label className='label'>Height</label>\n            <input\n              className='input'\n              type='range'\n              min='350'\n              max='1000'\n              value={theme.height ? theme.height.slice(0, -2) : '500'}\n              name='height'\n              onChange={handleChange}\n            />\n            <label className='label'>Width</label>\n            <input\n              className='input'\n              type='range'\n              min='400'\n              value={theme.width ? theme.width.slice(0, -2) : '800'}\n              max='1000'\n              name='width'\n              onChange={handleChange}\n            />\n          </>\n        )}\n        {style === 'card' && (\n          <>\n            <label className='label'>Height</label>\n            <input\n              className='input'\n              type='range'\n              min='350'\n              max='550'\n              value={theme.height ? theme.height.slice(0, -2) : '500'}\n              name='height'\n              onChange={handleChange}\n            />\n            <label className='label'>Width</label>\n            <input\n              className='input'\n              type='range'\n              min='350'\n              value={theme.width ? theme.width.slice(0, -2) : '450'}\n              max='550'\n              name='width'\n              onChange={handleChange}\n            />\n          </>\n        )}\n        {style === 'list' && (\n          <>\n            <label className='label'>Height</label>\n            <input\n              className='input'\n              type='range'\n              min='170'\n              max='500'\n              value={theme.height ? theme.height.slice(0, -2) : '170'}\n              name='height'\n              onChange={handleChange}\n            />\n            <label className='label'>Width</label>\n            <input\n              className='input'\n              type='range'\n              min='550'\n              value={theme.width ? theme.width.slice(0, -2) : '700'}\n              max='800'\n              name='width'\n              onChange={handleChange}\n            />\n          </>\n        )}\n      </div>\n    </>\n  )\n}\n","import * as React from 'react'\n\nexport interface ComponentStyleProps {\n  component: string\n  setComponent: React.Dispatch<React.SetStateAction<string>>\n}\n\nexport const ComponentStyle: React.FC<ComponentStyleProps> = ({\n  component,\n  setComponent\n}: ComponentStyleProps) => {\n  const handleClick = (component: any) => {\n    setComponent(component)\n  }\n  return (\n    <>\n      <h2>Choose your Style</h2>\n      <div className='separation-line'>\n        <hr />\n      </div>\n      <div className='button-container'>\n        <button\n          className={`button ${\n            component === 'banner' ? 'activated-component' : ''\n          }`}\n          onClick={() => handleClick('banner')}\n        >\n          Banner\n        </button>\n        <button\n          className={`button ${\n            component === 'card' ? 'activated-component' : ''\n          }`}\n          onClick={() => handleClick('card')}\n        >\n          Card\n        </button>\n        <button\n          className={`button ${\n            component === 'list' ? 'activated-component' : ''\n          }`}\n          onClick={() => handleClick('list')}\n        >\n          List\n        </button>\n      </div>\n    </>\n  )\n}\n","import * as React from 'react'\n\nexport interface OptionsContainerProps {\n  style?: string\n  theme?: {\n    style?: number\n    socialMediaBackground?: boolean\n    imagePosition?: string\n  }\n  setTheme?: React.Dispatch<React.SetStateAction<{}>>\n  socialMedia?: boolean\n  setSocialMedia?: React.Dispatch<React.SetStateAction<boolean>>\n  showCategory?: boolean\n  setShowCategory?: React.Dispatch<React.SetStateAction<boolean>>\n  hover: boolean\n  setHover?: React.Dispatch<React.SetStateAction<boolean>>\n}\n\nexport const OptionsContainer: React.FC<OptionsContainerProps> = ({\n  style,\n  theme,\n  setTheme,\n  socialMedia,\n  setSocialMedia,\n  showCategory,\n  setShowCategory,\n  hover,\n  setHover\n}: OptionsContainerProps) => {\n  function handleSocialMedia(state: boolean) {\n    setSocialMedia && setSocialMedia(state)\n  }\n  function handleSocialMediaBackground(state: boolean) {\n    setTheme && setTheme({ ...theme, socialMediaBackground: state })\n  }\n  function handleImageSide(position: string) {\n    setTheme && setTheme({ ...theme, imagePosition: position })\n  }\n  function handleShowCategory(state: boolean) {\n    setShowCategory && setShowCategory(state)\n  }\n  function handleBannerStyle(state: number) {\n    setTheme && setTheme({ ...theme, style: state })\n  }\n  function handleHover(state: boolean) {\n    setHover && setHover(state)\n  }\n  return (\n    <>\n      <h2>Toggle your options</h2>\n      <div className='separation-line'>\n        <hr />\n      </div>\n      <div className='options-container'>\n        {style === 'banner' && (\n          <section className='banner-options'>\n            <div className='toggle-component'>\n              <label className='label fontRuleTwo'>Style</label>\n              <div className='social-media-button'>\n                <button\n                  className={` fontButton ${\n                    theme && theme.style === 1 ? 'activated-component' : ''\n                  }`}\n                  onClick={() => handleBannerStyle(1)}\n                >\n                  1\n                </button>\n                <button\n                  className={` fontButton ${\n                    theme && theme.style === 2 ? 'activated-component' : ''\n                  }`}\n                  onClick={() => handleBannerStyle(2)}\n                >\n                  2\n                </button>\n              </div>\n            </div>\n            <div className='toggle-component'>\n              <label className='label fontRuleTwo'>Hovering</label>\n              <div className='social-media-button'>\n                <button\n                  className={` fontButton ${\n                    hover && hover ? 'activated-component' : ''\n                  }`}\n                  onClick={() => handleHover(true)}\n                >\n                  Yes\n                </button>\n                <button\n                  className={` fontButton ${\n                    hover === false ? 'activated-component' : ''\n                  }`}\n                  onClick={() => handleHover(false)}\n                >\n                  No\n                </button>\n              </div>\n            </div>\n          </section>\n        )}\n        {style === 'card' && (\n          <section className='banner-options'>\n            <div className='toggle-component'>\n              <label className='label fontRuleTwo'>Social Media</label>\n              <div className='social-media-button'>\n                <button\n                  className={` fontButton ${\n                    socialMedia && socialMedia === true\n                      ? 'activated-component'\n                      : ''\n                  }`}\n                  onClick={() => handleSocialMedia(true)}\n                >\n                  Yes\n                </button>\n                <button\n                  className={` fontButton ${\n                    socialMedia === false ? 'activated-component' : ''\n                  }`}\n                  onClick={() => handleSocialMedia(false)}\n                >\n                  No\n                </button>\n              </div>\n            </div>\n            <div className='toggle-component'>\n              <label className='label fontRuleTwo'>\n                Social Media Background\n              </label>\n              <div className='social-media-button'>\n                <button\n                  className={` fontButton ${\n                    theme && theme.socialMediaBackground === true\n                      ? 'activated-component'\n                      : ''\n                  }`}\n                  onClick={() => handleSocialMediaBackground(true)}\n                >\n                  Yes\n                </button>\n                <button\n                  className={` fontButton ${\n                    theme && theme.socialMediaBackground === false\n                      ? 'activated-component'\n                      : ''\n                  }`}\n                  onClick={() => handleSocialMediaBackground(false)}\n                >\n                  No\n                </button>\n              </div>\n            </div>\n          </section>\n        )}\n        {style === 'list' && (\n          <section className='banner-options'>\n            <div className='toggle-component'>\n              <label className='label fontRuleTwo'>Side of the image</label>\n              <div className='social-media-button'>\n                <button\n                  className={` fontButton ${\n                    theme && theme.imagePosition === 'left'\n                      ? 'activated-component'\n                      : ''\n                  }`}\n                  onClick={() => handleImageSide('left')}\n                >\n                  Left\n                </button>\n                <button\n                  className={` fontButton ${\n                    theme && theme.imagePosition === 'right'\n                      ? 'activated-component'\n                      : ''\n                  }`}\n                  onClick={() => handleImageSide('right')}\n                >\n                  Right\n                </button>\n              </div>\n            </div>\n            <div className='toggle-component'>\n              <label className='label fontRuleTwo'>Show Category</label>\n              <div className='social-media-button'>\n                <button\n                  className={` fontButton ${\n                    showCategory && showCategory === true\n                      ? 'activated-component'\n                      : ''\n                  }`}\n                  onClick={() => handleShowCategory(true)}\n                >\n                  Yes\n                </button>\n                <button\n                  className={` fontButton ${\n                    showCategory === false ? 'activated-component' : ''\n                  }`}\n                  onClick={() => handleShowCategory(false)}\n                >\n                  No\n                </button>\n              </div>\n            </div>\n          </section>\n        )}\n      </div>\n    </>\n  )\n}\n","import React, { useEffect } from 'react'\nimport Prism from 'prismjs'\n\nexport interface CodeSnippetProps {\n  article?: {\n    author?: string\n    category?: string\n    title?: string\n    description?: string\n    date?: number\n    image: string\n  }\n  theme: {\n    width?: string\n    height?: string\n    primary?: string\n    secondary?: string\n    smallFont?: string\n    mediumFont?: string\n    largeFont?: string\n    backgroundColor?: string\n    imagePostion?: string\n    socialMediaBackground?: boolean\n    border?: boolean\n  }\n  showCategory?: boolean\n  dateFormat?: string\n  socialMedia?: boolean\n  hover?: boolean\n  component?: string\n  route?: string\n}\n\nexport const CodeSnippet: React.FC<CodeSnippetProps> = ({\n  article,\n  theme,\n  component,\n  showCategory,\n  route,\n  socialMedia,\n  hover\n}) => {\n  useEffect(() => {\n    Prism.highlightAll()\n  })\n  const keys = Object.keys(theme)\n  const string = keys\n    .reduce((a, b) => {\n      if (!theme[b]) return a\n      else\n        return (\n          a +\n          `${b}: \"${theme[b]}\",\n    `\n        )\n    }, ``)\n    .trim()\n\n  const propArticle = article\n    ? `\n      article={author:${article.author}\n      category: ${article.category}\n      title: ${article.title}\n      description: ${article.description}\n      date: ${article.date}\n      image: ${article.image}}\n `\n    : ''\n  const propHover = hover ? `hover=${hover}` : ''\n  const propSocialMedia = socialMedia ? `socialMedia=${socialMedia}` : ''\n  const propShowCategory = showCategory ? `showCategory=${showCategory}` : ''\n  const propRoute = route ? `route=\"${route}\"` : ''\n\n  const bannerCode = `\n  <Banner article={article} theme={${string}} ${propHover} ${propRoute}/>\n  `\n\n  const cardCode = `\n  <Card article={article} theme={${string}} ${propSocialMedia} ${propRoute}/>\n  `\n\n  const listCode = `\n  <List article={article} theme={${string}} ${propShowCategory} ${propRoute}/>\n  `\n  return (\n    <>\n      <h2>Grab your code !</h2>\n      <div className='separation-line'>\n        <hr />\n      </div>\n      <div className='code_snippet'>\n        <pre>\n          <code>{propArticle}</code>\n          {component === 'banner' && <code>{bannerCode}</code>}\n          {component === 'card' && <code>{cardCode}</code>}\n          {component === 'list' && <code>{listCode}</code>}\n        </pre>\n      </div>\n    </>\n  )\n}\n","import React, { useState } from 'react'\nimport { Banner, Card, List } from 'react-easy-blog-post'\nimport { Intro } from './components/intro'\nimport { Article } from './components/article'\nimport { FontSelector } from './components/fontSelector'\nimport { Color } from './components/color'\nimport { Size } from './components/size'\nimport { ComponentStyle } from './components/style'\nimport { OptionsContainer } from './components/container'\nimport { CodeSnippet } from './components/codeSnippet'\n\nconst App = () => {\n  const [component, setComponent] = useState('banner')\n  const [theme, setTheme] = useState({})\n  const [socialMedia, setSocialMedia] = useState(false)\n  const [showCategory, setShowCategory] = useState(true)\n  const [hover, setHover] = useState(false)\n  const [article, setArticle] = useState({\n    title:\n      'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.',\n    category: 'Poetry',\n    description:\n      'Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.',\n    image:\n      'https://images.unsplash.com/photo-1605453302863-85c32f2adc76?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=800&q=60',\n    author: 'Charles Bukowski',\n    date: 1605188922555\n  })\n\n  return (\n    <>\n      <div className='main-container'>\n        <div className='left-container'>\n          {component === 'banner' && (\n            <Banner article={article} theme={theme} hover={hover} />\n          )}\n          {component === 'card' && (\n            <Card article={article} theme={theme} socialMedia={socialMedia} />\n          )}\n          {component === 'list' && (\n            <List article={article} theme={theme} showCategory={showCategory} />\n          )}\n        </div>\n        <div className='right-container'>\n          <h1>Save some time to create your post !</h1>\n          <Intro />\n          <Article article={article} setArticle={setArticle} />\n          <ComponentStyle component={component} setComponent={setComponent} />\n          <Size theme={theme} setTheme={setTheme} style={component} />\n          <FontSelector theme={theme} setTheme={setTheme} />\n          <Color theme={theme} setTheme={setTheme} />\n          <OptionsContainer\n            style={component}\n            theme={theme}\n            setTheme={setTheme}\n            socialMedia={socialMedia}\n            setSocialMedia={setSocialMedia}\n            showCategory={showCategory}\n            setShowCategory={setShowCategory}\n            hover={hover}\n            setHover={setHover}\n          />\n          <CodeSnippet\n            article={article}\n            theme={theme}\n            socialMedia={socialMedia}\n            showCategory={showCategory}\n            hover={hover}\n            component={component}\n          />\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default App\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}